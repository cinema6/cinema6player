package com.cinema6.renderer.tracker {	import flash.events.IOErrorEvent;	import flash.events.SecurityErrorEvent;	import flash.external.ExternalInterface;	import flash.net.URLLoader;	import flash.net.URLRequest;		public class PixelTracker {		private static var _enable:Boolean = true;				public function PixelTracker():void {		}				public static function disable():void{			_enable = false;		}				public static function enable():void{			_enable = true;		}				public static function fire(pixel:Array):void {			if (!_enable) return						for (var i:Number = 0; i < pixel.length; i++) {				var loader:URLLoader = new URLLoader();				var onPixelEvent:Function = function(e:*) {				}				loader.addEventListener(IOErrorEvent.IO_ERROR, onPixelEvent);				loader.addEventListener(SecurityErrorEvent.SECURITY_ERROR, onPixelEvent);								if (pixel[i] && pixel[i] != ""){					try{						loader.load(new URLRequest(pixel[i]));					}catch(e:Error){}				}			}		}				private static function log(msg:String):void {			trace("Cinema6:" + msg);						if (ExternalInterface.available) {				try{					ExternalInterface.call("console.log", "Cinema6:" + msg);				}catch(e:Error){}			}		}	}}